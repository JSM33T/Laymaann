{"version":3,"sources":["../../../../../Scripts/dedicated/account/login.ts"],"sourcesContent":["import { acToast, acPostData, acFormHandler, acInit } from '../../global.js';\r\n\r\nconst userNameInput = document.getElementById('userName') as HTMLInputElement;\r\nconst passwordInput = document.getElementById('password') as HTMLInputElement;\r\nconst submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;\r\nacInit([\r\n    () => acFormHandler('login-form', submitLoginForm)\r\n]);\r\n\r\nasync function submitLoginForm() {\r\n    const username = userNameInput.value;\r\n    const password = passwordInput.value;\r\n\r\n    if (username.length <= 2) {\r\n        acToast(\"error\", \"Username should be at least 3 characters long.\");\r\n    } else if (password.length < 6) {\r\n        acToast(\"error\", \"Password should be at least 6 characters long.\");\r\n    } else {\r\n        await postToLoginApi(username, password);\r\n    }\r\n}\r\n\r\nasync function postToLoginApi(username: string, password: string) {\r\n    const apiUrl = '/api/account/login';\r\n\r\n    const data: { username: string; password: string } = {\r\n        username,\r\n        password\r\n    };\r\n    submitBtn.innerHTML = \"Loading...\";\r\n\r\n    try {\r\n        const response = await acPostData(apiUrl, data);\r\n        if (response.type === \"ok\") {\r\n            submitBtn.innerHTML = \"Logging in...\";\r\n            submitBtn.classList.add('pe-none');\r\n            const lastLink: string | null = localStorage.getItem(\"curr_link\");\r\n            if (lastLink) {\r\n                window.location.href = lastLink;\r\n            }\r\n            else {\r\n                window.location.href = \"/\";\r\n            }\r\n        }\r\n        else {\r\n            acToast('error', response.data);\r\n        }\r\n        console.log(response.data)\r\n    } catch (error) {\r\n        console.error('Error during login:', error);\r\n        acToast('error', 'Something went wrong');\r\n    } finally {\r\n        submitBtn.innerHTML = \"Log In\";\r\n        submitBtn.classList.remove('pe-none');\r\n    }\r\n}\r\n"],"names":["acToast","acPostData","acFormHandler","acInit","userNameInput","document","getElementById","passwordInput","submitBtn","submitLoginForm","username","value","password","length","postToLoginApi","innerHTML","response","type","classList","add","lastLink","localStorage","getItem","window","location","href","data","console","log","error","remove"],"mappings":"qTAAA,OAASA,WAAAA,CAAO,CAAEC,cAAAA,CAAU,CAAEC,iBAAAA,CAAa,CAAEC,UAAAA,CAAM,KAAQ,iBAAkB,CAE7E,IAAMC,EAAgBC,SAASC,cAAc,CAAC,YACxCC,EAAgBF,SAASC,cAAc,CAAC,YACxCE,EAAYH,SAASC,cAAc,CAAC,sBAK3BG,WAAAA,iCAAAA,WAAAA,EAAf,EAAA,YACI,IAAMC,EAAWN,EAAcO,KAAK,CAC9BC,EAAWL,EAAcI,KAAK,AAEhCD,CAAAA,EAASG,MAAM,EAAI,EACnBb,EAAQ,QAAS,kDACVY,EAASC,MAAM,CAAG,EACzBb,EAAQ,QAAS,kDAEjB,MAAMc,SAIgBJ,CAAgB,CAAEE,CAAgB,SAAjDE,yBAJcJ,EAAUE,EAEvC,mCAEeE,WAAAA,EAAf,EAAA,UAA8BJ,CAAgB,CAAEE,CAAgB,EAO5DJ,EAAUO,SAAS,CAAG,aAEtB,GAAI,CACA,IAAMC,EAAW,MAAMf,EATZ,qBAEsC,CACjDS,SAAAA,EACAE,SAAAA,CACJ,GAKI,GAAII,AAAkB,OAAlBA,EAASC,IAAI,CAAW,CACxBT,EAAUO,SAAS,CAAG,gBACtBP,EAAUU,SAAS,CAACC,GAAG,CAAC,WACxB,IAAMC,EAA0BC,aAAaC,OAAO,CAAC,aACjDF,EACAG,OAAOC,QAAQ,CAACC,IAAI,CAAGL,EAGvBG,OAAOC,QAAQ,CAACC,IAAI,CAAG,GAE/B,MAEIzB,EAAQ,QAASgB,EAASU,IAAI,EAElCC,QAAQC,GAAG,CAACZ,EAASU,IAAI,CAC7B,CAAE,MAAOG,EAAO,CACZF,QAAQE,KAAK,CAAC,sBAAuBA,GACrC7B,EAAQ,QAAS,uBACrB,QAAU,CACNQ,EAAUO,SAAS,CAAG,SACtBP,EAAUU,SAAS,CAACY,MAAM,CAAC,UAC/B,CACJ,0BAlDA3B,EAAO,CACH,IAAMD,EAAc,aAAcO,GACrC"}