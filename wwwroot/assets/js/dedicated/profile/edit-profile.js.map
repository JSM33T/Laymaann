{"version":3,"sources":["../../../../../Scripts/dedicated/profile/edit-profile.ts"],"sourcesContent":["\r\nimport { acFormHandler, acGetData, acInit, acPostData, acToast } from '../../global.js'\r\nimport { IProfile } from '../../Interfaces/profile.interface.js';\r\n\r\nconst firstName = document.getElementById(\"firstName\") as HTMLInputElement;\r\nconst lastName = document.getElementById(\"lastName\") as HTMLInputElement;\r\nconst emailId = document.getElementById(\"emailId\") as HTMLInputElement;\r\nconst userName = document.getElementById(\"userName\") as HTMLInputElement;\r\nconst bio = document.getElementById(\"bio\") as HTMLTextAreaElement;\r\n\r\n// const detailsForm = document.getElementById(\"basicInfoForm\") as HTMLFormElement;\r\n// const passForm = document.getElementById(\"passForm\") as HTMLFormElement;\r\n\r\nconst Avatar = document.getElementById(\"avatarPlaceHolder\") as HTMLElement;\r\nconst avatarDdl = document.getElementById(\"avatarDdl\") as HTMLSelectElement;\r\n\r\n\r\nacInit([\r\n    async () => {\r\n        await Promise.all([\r\n            onAvatarChangeEvent(),\r\n            loadavatarDdl().then(fetchDetails),\r\n            acFormHandler(\"basicInfoForm\", submitDetails),\r\n            acFormHandler(\"passForm\", submitPass),\r\n        ]);\r\n    }\r\n]);\r\n\r\n\r\n\r\n//onAvatarChangeEvent,\r\n//async () => {\r\n//    await loadavatarDdl();\r\n//    await fetchDetails();\r\n//},\r\n//() => acFormHandler('basicInfoForm', submitDetails),\r\n//() => acFormHandler('passForm', submitPass),\r\n\r\nasync function onAvatarChangeEvent() {\r\n\r\n    avatarDdl!.addEventListener(\"change\", () => {\r\n        var selectedOption = avatarDdl!.options[avatarDdl!.selectedIndex];\r\n        var imgValue = selectedOption.dataset.img;\r\n        Avatar!.style.backgroundImage = 'url(/assets/images/avatars/default/' + imgValue + '.png)';\r\n    });\r\n}\r\n\r\n\r\nasync function getCheckedRadioButton() {\r\n    return null;\r\n}\r\n\r\n\r\n\r\n\r\nasync function fetchDetails() {\r\n    const g_m = document.getElementById('male') as HTMLInputElement;\r\n    const g_f = document.getElementById('female') as HTMLInputElement;\r\n    const g_o = document.getElementById('other') as HTMLInputElement;\r\n\r\n    const response = acGetData('/api/profile/getdetails');\r\n    console.log((await response).data);\r\n    const resp: IProfile = (await response).data;\r\n    firstName.value = resp.firstName;\r\n    lastName.value = resp.lastName;\r\n    userName.value = resp.userName;\r\n    emailId.value = resp.eMail;\r\n    bio.value = resp.bio;\r\n    avatarDdl.value = resp.avatarId!.toString();\r\n\r\n    if (resp.gender == 'm') { g_m.checked}\r\n    else if (resp.gender == 'f') { g_f.checked }\r\n    else { g_o.checked }\r\n\r\n    Avatar.style.backgroundImage = 'url(/assets/images/avatars/default/' + resp.avatarImg + '.png)';\r\n}\r\n    \r\nasync function loadavatarDdl() {\r\n    const optns = await acGetData(\"/api/getavatars\");\r\n    let options = ` <option value=\"\" selected disabled>Select avatar</option>`;\r\n    var i;\r\n    for (i = 1; i < optns.data.length; i++) {\r\n        options += `<option value=\"${optns.data[i].id}\" data-img=\"${optns.data[i].image}\">${optns.data[i].title}</option>`;\r\n    }\r\n    avatarDdl.innerHTML = options;\r\n}\r\n\r\nasync function submitDetails() {\r\n    console.log(getCheckedRadioButton);\r\n    const data = {\r\n        firstName: firstName.value,\r\n        lastName: lastName.value,\r\n        bio: bio.value,\r\n        avatarId: parseInt(avatarDdl.value) || 1,\r\n        eMail: emailId.value,\r\n        gender: getCheckedRadioButton,\r\n        userName: userName.value\r\n    }\r\n    const resp = await acPostData('/api/profile/update', data);\r\n        if(resp.type == \"ok\")\r\n        {\r\n            acToast(\"Success\", resp.data);\r\n            await updatePfp();\r\n            const something = document.getElementsByClassName('name-placeholder');\r\n            something[0].innerHTML = firstName.value;\r\n            something[1].innerHTML = firstName.value;\r\n\r\n        }\r\n        else\r\n        {\r\n            acToast(\"error\",resp.data);\r\n        }    \r\n}\r\n\r\nasync function updatePfp() {\r\n\r\n    const selectedOption = avatarDdl.options[avatarDdl.selectedIndex];\r\n    let dataImgValue = selectedOption.getAttribute(\"data-img\");\r\n    \r\n    let imgElements = document.getElementsByClassName(\"avatar-placeholder\") as HTMLCollectionOf<HTMLImageElement>;\r\n\r\n    for (let i = 0; i < imgElements.length; i++) {\r\n\r\n        imgElements[i].src = \"/assets/images/avatars/default/\" + dataImgValue + \".png\";\r\n        console.log(imgElements[i].src);\r\n    }\r\n\r\n\r\n}\r\n\r\nasync function submitPass() {\r\n\r\n    const newpass = document.getElementById('new-pass') as HTMLInputElement;\r\n    const confirmpass = document.getElementById('confirm-pass') as HTMLInputElement;\r\n    if (newpass.value == \"\" || newpass.value.length < 6) {\r\n        acToast('validation issue', 'password too short');\r\n        return\r\n    }\r\n    if (newpass.value != confirmpass.value) {\r\n        acToast('error', 'Passwords don\\'t match');\r\n        return;\r\n    }\r\n\r\n    const data = {\r\n        password: newpass.value\r\n    };\r\n    const res = await acPostData('/api/profile/password/update', data);\r\n    console.log(res);\r\n    if (res.type == \"ok\") {\r\n        acToast('success', res.data);\r\n    }\r\n    else {\r\n        acToast('error', res.data);\r\n    }\r\n}\r\nasync function logOutFromAll() {\r\n    const resp = acGetData('/api/account/disposekey');\r\n    console.log(resp);\r\n}\r\nasync function clearPreferences() {\r\n}"],"names":["acFormHandler","acGetData","acInit","acPostData","acToast","firstName","document","getElementById","lastName","emailId","userName","bio","Avatar","avatarDdl","onAvatarChangeEvent","addEventListener","imgValue","selectedOption","options","selectedIndex","dataset","img","style","backgroundImage","getCheckedRadioButton","fetchDetails","g_m","g_f","g_o","response","console","log","data","resp","value","eMail","avatarId","toString","gender","checked","avatarImg","loadavatarDdl","i","optns","length","id","image","title","innerHTML","submitDetails","parseInt","type","updatePfp","something","getElementsByClassName","dataImgValue","getAttribute","imgElements","src","submitPass","newpass","confirmpass","password","res","Promise","all","then"],"mappings":"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"}